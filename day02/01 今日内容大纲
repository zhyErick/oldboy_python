一. 昨日内容回顾
    1. python是一门解释型弱类型高级编成语言语言
    2. 常见的解释器:
        CPython, IPython, pypy，JPython, IronPython
    3. 变量：在程序运行过程中产生的中间值供给后面使用
        命名规范:
            1. 由数字， 字母, 下划线组成
            2. 不能是数字开头， 更不能是纯数字
            3. 不能是关键字(if else elif)
            4. 不要太长
            5. 要有意义
            6. 不要用中文
            7. 区分大小写
            8. 使用驼峰或者下划线
        数据类型:
            1. int(整数)
                +-*/  //  %
            2. str(字符串)
                + *
                int(str)
            3. bool(布尔值) True, False
        常量 : 不存在绝对的常量。所有的字母大写就是常量
        交互 : s = input("提示语")

        条件判断 if语句
            if 条件:
                代码块

            条件成立运行代码块

            if 条件：
                代码块
            else：
                代码块

            if 条件:
                代码块
            elif 条件:
                 代码块
            elif.....
            else:
                代码块

            嵌套

二. 作业讲解

三. 今日主要内容
    1. 循环
        while 条件:
            代码块(循环体)
            break 彻底停止当前本层循环
            continue 停止当前本次循环。 继续执行下一次循环
        else: # 当条件为假的时候会执行else
            代码块
    2. 格式化输出
        %s 占位字符串 用这个
        %d 占位数字
    3. 运算符(难点)
        and 并且。 左右两端同时为真。 结果才能是真
        or  或者。 左右两端有一个是真。 结果就是真
        not 非真即假， 非假即真

        顺序： () => not => and => or

        x or y
        if x == 0: y else: x

        and和or相反

    4. 编码
        最早的计算机编码是ASCII。 有英文+数字+特殊字符 8bit => 1byte 没有中文, 后面的编码必须兼容ASCII
         GBK 把中国的文字进行编码. 对ASCII扩充。 16bit  => 2byte 主要包含了中文， 日文， 韩文, 英文（兼容ASCII）
         UNICODE 32bit 兼容各个国家的编码。万国码。 浪费空间  32bit => 4byte
         UTF-8 可变长度的UNICODE。本质是UNICODE。
            英文在UTF-8里面占用1个字节  8bit
            欧洲文字。占用2个字节  16bit
            中文. 占用3个字节   24bit
        UTF-16

        8bit => 1byte
        1024byte => 1kb
        1024kb => 1mb
        1024mb => 1gb
        1024gb => 1tb
        1024tb = > 1

    5. in
        判断xxx是否出现在xxxx中

    预习:
        字符串